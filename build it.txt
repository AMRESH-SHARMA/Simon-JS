1. Create an array of four colors.
2. Generate random no. 0-4 and  select color according to no. generated
3. Select ID(red, green, yellow, blue) of html buttons. Do ANIMATION and call PLAY sound function and write its logic seperately.

<------------------------------------------------------------------------------------------------------------------>
TRACK  BUTTON CLICKS::

4. Use jQuery to detect any of the buttons are clicked using mouse and trigger a handler function.
Inside the handler, create a new variable called userChosenColour to store the id of the button that got clicked.

5. Add the contents of the variable userChosenColour created in step 4 to the end of this new userClickedPattern.

<------------------------------------------------------------------------------------------------------------------>
INCREASE LEVEL FUNCTION: nextSequence()

1. The h1 title starts out saying "Press A Key to Start", when the game has started, change this to say "Level 0".

2. Inside nextSequence(), increase the level by 1 every time nextSequence() is called.

3. Inside nextSequence(), update the h1 with this change in the value of level

<------------------------------------------------------------------------------------------------------------------>
CHECK PATTERN::

1. Create a new function called checkAnswer(), it should take one input with the name currentLevel

2. Call checkAnswer() after a user has clicked and chosen their answer, passing in the index of the last answer in the user's sequence.

e.g. If the user has pressed red, green, red, yellow, the index of the last answer is 3.

3. Write an if statement inside checkAnswer() to check if the most recent user answer is the same as the game pattern. If so then log "success", otherwise log "wrong".

You can now use these log statements along with logging the values of userClickedPattern and gamePattern in the Chrome Developer Tools console to check whether if your code is performing as you would expect and debug your code as needed. Once you're done, feel free to remove these log statements.

4. If the user got the most recent answer right in step 3, then check that they have finished their sequence with another if statement.

5. Call nextSequence() after a 1000 millisecond delay.

6. Once nextSequence() is triggered, reset the userClickedPattern to an empty array ready for the next level.

<------------------------------------------------------------------------------------------------------------------>
RESTART GAME::

1. Create a new function called startOver().

2. Call startOver() if the user gets the sequence wrong.

3. Inside this function, you'll need to reset the values of level, gamePattern and started variables

<------------------------------------------------------------------------------------------------------------------>
FUNCTIONS::
1. playSound()

2. animatePress()   
>>>Takes a single input parameter called currentColour.
>>> Take a look inside the styles.css file, you can see there is a class called "pressed", it will add a box shadow and changes the background colour to grey.
